package main

import "fmt"

// 数组可以理解成 是一个容器中存放着多个相同的元素
// 数组的长度是固定的，所以导致了其使用的频率并没有那么高
func main() {

	// 声明并且初始化数组的几种方式
	// 1.方式一
	var arr1 [3]int = [3]int{1, 2, 3}
	// 2.方式二，如果定义的长度为3 但是元素并没有3个，那么没有的原因会采用默认值
	var arr2 [3]int = [3]int{1, 2}
	// 3.方式三 简短一点的声明
	arr3 := [3]int{1, 2, 3}
	// 3.不定义长度直接根据元素个数来自动判断长度
	arr4 := [...]int{1, 2, 3}

	// 获取数组的值，语法： 数组变量名[索引值], 在计算机中索引的默认值是从0开始算
	// 比如我们要获取arr1中的 元素'1'
	fmt.Println("获取arr1的元素:", arr1[0])
	// 或者我们要看一下arr2中长度为3 但是我们没有定义的那个第三个元素是多少
	fmt.Println("arr2的第三个元素:", arr2[2])
	// 我们也可以修改 数组的内容，通过对应的索引值
	// 比如我们将arr3的 '3'元素改为'4'
	arr3[2] = 4
	fmt.Println("修改后的arr3的第三个元素值为：", arr3[2])
	// 或者我们也可以 对数组进行比较。只有当两个数组中的所有元素都相等的时候数组才是相等的。
	// 同时比较数组类型的的时候需要相同类型和相同长度
	fmt.Println("arr1和arr4比较值为：", arr1 == arr4)

}
